
Dependencies
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
lfit_gui is written in python, and uses some standard python packages such as numpy, scipy, matplotlib, etc. Some non-standard python packages are also required. The easiest way of installing those packages (if you haven't) will be through pip install. 

1. lmfit (a non-linear fitter)
https://pypi.python.org/pypi/lmfit/0.8.0

Note that lfit_gui uses an older version of lmfit (0.8.0), which is unfortunately not compatible with its later releases. So if you were to install lmfit via pip install, you would need to specify the version number by “pip install lmfit==0.8.0”

2. emcee (a mcmc tool)
http://dan.iel.fm/emcee/current/

3. cosmolopy
http://roban.github.io/CosmoloPy/

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


Installation
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
1. Unpack the tarball lfit_gui.tar in a directory of your choice (hereby refer to INSTALL_DIR).

mv lfit_gui.tar INSTALL_DIR
cd INSTALL_DIR
tar -xvf lfit_gui.tar

A directory named lfit_gui will be created. You are free to remove the tar file. 

2. Set up the environmental variables (use bash as an example, if using c shell, modify accordingly).

export LFIT_GUI_DIR=INSTALL_DIR/lfit_gui/
export PYTHONPATH=$LFIT_GUI_DIR:$PYTHONPATH

3. Create aliases for the executables 
alias lfit_gui='INSTALL_DIR/lfit_gui/lfit_gui'
alias lfit_script='INSTALL_DIR/lfit_gui/lfit_script'
alias lfit_generate_biz='INSTALL_DIR/lfit_gui/lfit_generate_biz'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


Set up data structure
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
lfit_gui is originally designed to work with HST data, and therefore requires the data to be organized in a specific manner. 

1. Create HST_DIR
You'll need a root directory for all the data (hereby refer to HST_DIR)

mkdir HST_DIR
export HST_DIR=HST_DIR
export HST_DATAROOT=HST_DIR

2. Make cycle/program/visit/ subdirectories 

cd $HST_DIR
mkdir cycle (replace "cycle" by the specific cycle number, for instance "23")
cd cycle
mkdir program (replace "program" by the specific program number, for instance "14189")
cd program
mkdir visit (replace "visit" by the specific visit number, for instance "01")
cd visit

3. Move the corresponding biz file to the visit directory

cp file_biz.fits $HST_DIR/cycle/program/visit

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Generate biz files
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The biz file is a fits file ended by "_biz.fits", which should contain the following data in a specific order. A biz file can be generated by calling the "lfit_generate_biz" executable in the terminal as: 
lfit_generate_biz parfile_biz

An example of the parfile_biz is also provided under $LFIT_GUI_DIR. It should contain the following: 
1. File name of the imaging data and its extension in the fits file
2. File name of the inverse invariance and its extension in the fits file
3. File name of the point spread function and its extension in the fits file
4. File name of the junk mask and its extension in the fits file (0 means masked, 1 means unmaksed)
5. File name of the feature mask and its extension in the fits file (0 means masked, 1 means unmaksed
6. File name of the foreground-light model and its extension in the fits file
7. Four numbers representing the initial guesses of x and y coordinates of the lens center (in pixels), axis ratio, and position angle (east to north). 
8. Three strings representing the particular cycle, program, and visit that the biz file is supposed to be saved. The directories will be created if not exist. 
9. The name of the biz file. 

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
At this point, you should be able to start lfit_gui by opening a new terminal and type "lfit_gui". Enjoy!







>>>>>>> Dieu Notes >>>>>>>>>le
Check for the code with no use commands:
pylint lfit_script.py
Set environments:
https://conda.io/docs/user-guide/tasks/manage-environments.html
